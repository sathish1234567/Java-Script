JS used for Front end and backend development
-- create mobile Apps using JS and REACT
-- JS is integrated to software developement tool

Module1
-- Javascript Introduction
-- Install Visual Studio
-- Programming JS - varaibles /Data types/ Opearators / strings / booleans / numbers
-- conditional statement and loops


Module2
-- Arrays
-- Objects and Functions
-- Bugs and Errors

Module3
-- programming and Paradigms
-- scoping
-- Object Oriented Programming
-- Advanced Java Script --> tree structuring /Arrays/Objects
-- Data strucutres
-- Spread/Rest
-- Java script in a browser
-- practical exercises

Module-4
--Testing
--Jest
--test-driven development and testing challenges
--Java script environments

Introduction to JS:
__________________

1.  Web development
2.  JS
3.  Version Control

How did you start js programming?
________________________________
JS is integrated different technologies.
World runs using jS.

Why is so popular JS?
______________________
mainly used in Web development
used in front end and backend

However, if you don't code regularly - preferably on a daily basis - your progress will be slower. 
Try to set aside some time to consistently code and learn every day. Persistence is key.


clear the terminal: using 'clear' command in terminal

c:/> clear   --> clear content fromt the terminal

Java script integrated with browser --> we can write the JS code in console tab

CLient application developed based on plain JS/ JS frame work(React/Vue/D3)/Node

Comments:
__________
1. single line comment : to comment one line only
2. multi line comment : to comment the multi lines.

single line comments: //
multi line comments  /* .... */
/* ............
...........
.......
*/

in JS every statement ends with ';'(semi colon) only

console log:
_______________

console.log("%chello, world", "color:blue; font-size:40px"); --> display hello, world in blue color/ font-size with 40px

multiple words displaying in colsole.log:
________________________________________
console.log("hello" + "world," + "!") -- Hello world,!
console.log("hello", "world,", "!") -- Hello world,!



Variables:
_______________
Varaibles are not static, always changeable

>"John" --> press enter
>'John'
>var person  --> undefined  , w/o assigning a value -->varaible always undefined value only.
>var person = 'SamSunder'  ;
>undefined
>person
>'John'

multiple values are seperated by commma(,)
>console.log('Hello ', person);  --> already person has the value i.e John
>'Hello John'

displaying with multiple varaibles:
>var greetings = 'Hello';
>console( greetings, person);
>Hello John

changing the values to the varaibles:
>greetings = "hi';
>person = 'James';
>console.log(greetings, person);
>Hi James

Examples
________
Declare a new variable named 'petDog' and give it the name Rex. --> var petDog = 'Rex'

Declare a new variable named petCat and give it the name 'Pepper'. --> var petCat = 'Pepper'

Console.log the petDog variable.

Console.log the petCat variable.

console.log(petDog);
console.log(petCat);

Console.log the text "My pet dog's name is: " and the petDog variable.
console.log("My pet dog's name is: ", petDog);

Console.log the text "My pet cat's name is: " and the petCat variable.
console.log("My pet cat's name is: ", petCat);

Declare another variable and name it catSound. Assign the string of "purr" to it.

Declare another variable and name it dogSound. Assign the string of "woof" to it.

Console.log the variable petDog, then the string "says", then the variable dogSound.

Console.log the variable petCat, then the string "says", then the variable catSound.

Reassign the value stored in catSound to the string "meow".

Console.log the variable petCat, then the string "now says", then the variable catSound.

code:
var petDog = 'Rex';
var petCat = 'Pepper';
console.log(petDog);
console.log(petCat);
console.log("My pet dog's name is: ", petDog);
console.log("My pet cat's name is: ", petCat);
var catSound = "purr";
var dogSound = "woof";
console.log(petDog, ' says ', dogSound);
console.log(petCat, ' says ', catSound);
catSound = "meow";
console.log(petCat, ' now says ', catSound);

Output:
Rex
Pepper
My pet dog's name is:  Rex
My pet cat's name is:  Pepper
Rex  says  woof
Pepper  says  purr
Pepper  now says  meow

Data types:
____________
primitive data types in JS:(7)
1. string
2. Number
3. Boolean
4. Null
5. Undefined
6. BigInt
7. Symbol

Strings:
________
--  Name and description stored in text values.
--  Text value is known as string.
--  String value kept in enclosed with single quotes(' ' )/ double quotes(" .. ")
Ex:
'String' /"String" ---> string data type
-- unlimited number of chars.

Number:
_______
--  Price stored in Number data type
--  Ex:
275  --> Number data type

-- Number data type can be used in widely 

Boolean:
--------

-- it will take True(1)/False(0)
-- it is useful for making decisions

NULL:
_____
-- Which only has the value 'NO'.
-- represnts the Absence of the value.

Undefined:
_________
-- Unassigned a value.
-- means : varaible has defined but value has not yet been assigned.


BigInt:
_______
-- is used to vary large range of numbers.
-- Ex: 2^53 ( 2 power 53)

Symbol:
________
-- used for unique identifier.
-- 
